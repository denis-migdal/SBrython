{"version":3,"file":"125.mjs","mappings":"uNAIe,SAASA,EAAQC,EAAaC,EAAWC,IAEpDC,EAAAA,EAAAA,IAAQH,EAAKI,EAAAA,IAEb,MAAMC,EAAaJ,EAAKK,OAClBC,GAAaC,EAAAA,EAAAA,IAASR,EAAKK,GAEjC,IAAI,IAAII,EAAI,EAAGA,EAAIJ,IAAcI,EAAG,CAEhC,IAAIC,EAAKT,EAAKQ,GACc,SAAzBC,EAAGC,YAAYC,QACdF,EAAKA,EAAGG,QAEZC,EAAAA,EAAAA,IAAaL,EAAIF,EAASG,EAAIR,EAClC,CACJ,E","sources":["webpack://sbrython/./src/bry2sbry/body/Body.ts"],"sourcesContent":["import { BODY } from \"@SBrython/core_modules/lists\";\nimport { addChild, setType, type } from \"@SBrython/dop\";\nimport { Context, convert_node } from \"@SBrython/py2ast\";\n\nexport default function convert(dst: number, node: any, context: Context) {\n\n    setType(dst, BODY);\n\n    const nbChildren = node.length;\n    const coffset    = addChild(dst, nbChildren);\n\n    for(let i = 0; i < nbChildren; ++i) {\n\n        let cn = node[i];\n        if(cn.constructor.$name === \"Expr\") // only found in body ?\n            cn = cn.value;\n\n        convert_node(i + coffset, cn, context);\n    }\n}"],"names":["convert","dst","node","context","setType","BODY","nbChildren","length","coffset","addChild","i","cn","constructor","$name","value","convert_node"],"sourceRoot":""}