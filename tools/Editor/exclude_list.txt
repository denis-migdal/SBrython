# numbers.numbers
// is instance
9
30

// assert_raise
5
// __class__
8
29
// __abs__ __ceil__ __mod__
34-40

# numbers.long integers
// Math.pi 
4-7
// int() with base
13-47


# numbers.issue 749
// __eq__
*

# numbers.issue 98
// from_bytes
*
# numbers.issue 294
// from_bytes
*

# numbers.issue 1092
// to_bytes
*
# numbers.issue 794
// to_bytes
*

# numbers.PEP 515
// strange representations
*

# numbers.issue 115
// complex
*
# numbers.complex numbers
// complex
*
# numbers.issue 498
// complex+hash
*
# numbers.issue 955
// complex numbers
*
# numbers.issue 1001
// complex numbers
*
# numbers.issue 1211
// complex numbers
*
# numbers.issue 1245
// eval + complex numbers
*
# numbers.issue 1300
// complex numbers
*
# numbers.issue 1947
// complex numbers
*
# numbers.issue 2396
// complex numbers
*
# numbers.method __complex__
*

# numbers.issue 840
// id()
*
# numbers.issue 1234
// round()
*

# numbers.issue 1127
// override bitwise op
*
# numbers.& for long integers
// & operator -> for in list (get element type...)
*


# numbers.issue 1298
// pow / Fraction
*
# numbers.issue 1299
// pow
4
# numbers.issue 1309
// pow + Fraction
*
# numbers.issue 1328
// pow()
*
# numbers.issue 2110
// pow()
*
# numbers.issue 2407
// pow()
*


# numbers.issue 1295
// format stuff
*
# numbers..2G}' for i in nums]
// format stuff
*

# numbers.issue 1330
// repr
*

# numbers.issue 1491
// unary +
6
10

# numbers.issue 1504
// int() with base
*
# numbers.issue 1960
// int() with base 0
*

# numbers.issue 1558
// bytes
*

# numbers.issue 1666
// abs
*

# numbers.issue 1686
// __mul__ __rmull__
*


# numbers.hash of integers
*

# numbers.issue 1784
// pow() + divmod
*

# numbers.issue 1924
// bit_count
*

# numbers.issue 1955
// %=
*

# numbers.issue 1994
// float += int / abs()
*

# numbers.issue 1098
// f-string
*
# numbers.issue 2095
// f-string
*
# numbers.issue
// f-strings
*

# numbers.issue 2361
// TypeError
*

# numbers.issue 2465
// type()
*

# classes.classes
5
// multi-inheritance
28-45


# basic test suite.string methods
*

# basic test suite.list examples
*

# basic test suite.lambda
*

# basic test suite.inline functions and classes
*

# basic test suite.bytes
*

# basic test suite.functions and methods
// methods (cmp+return type)
*

# basic test suite.use of "global" in functions
*

# basic test suite.nonlocal and global
*

# basic test suite.__setattr__ defined in a class
*

# basic test suite.check that line is in exception info
*

# basic test suite.vars()
*

# basic test suite.@ operator (PEP 465)
*

# basic test suite.sys.exc_info
*

# basic test suite.comparisons with None
// requires bytes
*

# basic test suite.del
*

# basic test suite.PEP 572 (assignement expressions)
*

# basic test suite.operation with unary neg
// [] op
*

# basic test suite.issue 1355
// listes en comprehension
*

# numbers.issue 1462
// list
*
# numbers.augmented assignment on list item
// list
*
# basic test suite.filter
// filter + list
*
# basic test suite.PEP 585
// list and tuples
*
# basic test suite.issue 1693
// list (append)
*

# basic test suite.issue 1545
// lambdas
*

# basic test suite.issue 1654
// classes + strange stuff
*

# basic test suite.issue 1721
// no typehint in function arg
*

# basic test suite.various flavours of try / except / else / finally
*

# basic test suite.issue 1961
// for in list
*

# basic test suite.docstrings
*

# basic test suite.issue 2069
// global + , operator
*

# basic test suite.issue 1535
// liste en comprehension
*
# basic test suite.issue 1819
// list en comprehension + eval
*
# basic test suite.issue 2112
// f-string + list en comprehension
*

# basic test suite.setting function attributes __defaults__ and __kwdefaults__
*

# basic test suite.issue 2134
// break + loop else
*

# basic test suite.issue 2167
// fct args parsing + classes ?
*

# basic test suite.issue 2422
// globals
*

# basic test suite.issue 2443
// map + iter
*

# numbers.issue 350
// repr
7

#Â numbers.True and False are instances of int
// isinstance
*
# numbers.issue 564
// isinstance
*

# numbers.issue 1033
// Fraction
*

# numbers.issue 1040
// bool operations with number
*

# numbers.issue 1049
// float inheritance
*
# numbers.issue 1115
// float inheritance
*
# numbers.issue 1524
// float inheritance
*
# numbers.float subclass
*

# numbers.as_integer_ratio() on integers
*

# numbers.issue 1315
// divmod
*

# numbers.issue 1396
// format
*

# numbers.issue 2087
// sys
*

# numbers.digits in non-latin alphabets
// ch
*

# basic test suite.strings
// str.strip()
41-43

# basic test suite.enumerate
*

# basic test suite.dir
*

# basic test suite.nested function scopes
// unknown fct call
*

# basic test suite.restore built-in range
*

# basic test suite.unpacking in "for" target
*

# basic test suite.assert try_except_else_finally() == 4
*

# basic test suite.chained assignments and unpacking
*

# basic test suite.call function with **kw where kw has keys() and __getitem__
// removed from test.
*

# numbers.issue 982
// except
*
# numbers.issue 1156
// except + isinstance()
*

# numbers.issue 1512
// maths + isnan
*
# numbers.issue 1511
// math.isnan
7-8

# numbers.issue 2058
// hash()
*

# basic test suite.use imported names : override built-in range
// 
*

# basic test suite.check that name "constructor" is valid
// constructor = 0 ??
*

# numbers.issue 1864
// assertRaises
*
# numbers.issue 1885
// assertRaises
*
# numbers.issue 2023
// assertRaises
*
# numbers.issue 2363
// assertRaises
*
# basic test suite.PEP 570 (positional-only parameters)
// assert_raises
*
# basic test suite.not sure how to convert this to assert (raise)?
// raise
*
# basic test suite.issue 1557
// assert raise
*
# basic test suite.issue 1642
// assert raise
*
# basic test suite.issue 1697
// assert raise
*
# basic test suite.issue 1802
// assert raise
*
# basic test suite.issue 1803
// assert raise
*
# basic test suite.issue 1807
// assert raise
*
# basic test suite.symtable syntax errors
// assert raise
*
# basic test suite.error in function calls
// assert raise
*
# basic test suite.issue 2071
// assert raise
*
# basic test suite.object(1) raises TypeError
// assert raise
*
# basic test suite.exception attributes
// assert raise
*